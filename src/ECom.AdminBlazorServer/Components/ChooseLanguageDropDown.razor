@using ECom.Shared.DTOs
@using Microsoft.AspNetCore.Localization
@inject SupportedCultures SupportedCultures
@inject IJsCookieUtil CookieUtil

<RadzenDropDown class="mx-2" TValue="string" Data="SupportedCultures.Dictionary" ValueProperty="Key" @bind-Value="_selectedCulture" Change="OnChange" TextProperty="Value" Name="CultureSelect">

</RadzenDropDown>

@code {
  private string? _selectedCulture;

  protected override void OnInitialized() {
    if (string.IsNullOrEmpty(_selectedCulture)) _selectedCulture = Thread.CurrentThread.CurrentCulture.Name;
  //selectedCulture = System.Threading.Thread.CurrentThread.CurrentCulture.Name; @bind-Value="_selectedCulture"
  }

  private void OnChange() {
  //var context = HttpContextAccessor.HttpContext;

    var redirectPath = new Uri(Nav.Uri)
      .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);

    var culture = _selectedCulture;
    if (string.IsNullOrWhiteSpace(culture)) {
      culture = "en-US";
    }
    var isSupported = SupportedCultures.Dictionary.TryGetValue(culture, out _);
    if (!isSupported) {
      culture = "en-US";
    }
  //var redirectUri = Uri.EscapeDataString(uri);
  //var query = $"{URL.BaseApiUrl}SetCulture?culture={Uri.EscapeDataString(_selectedCulture)}&redirectUri={redirectUri}";


  //context.Response.Cookies.Append(
  //  CookieRequestCultureProvider.DefaultCookieName,
  //  CookieRequestCultureProvider.MakeCookieValue(new RequestCulture(culture)),
  //  new CookieOptions {
  //    Expires = DateTimeOffset.UtcNow.AddYears(1),
  //    IsEssential = true

  //  });
    CookieUtil.SetValue(CookieRequestCultureProvider.DefaultCookieName, CookieRequestCultureProvider.MakeCookieValue(new RequestCulture(culture)), 365);

  //Thread.CurrentThread.CurrentCulture = new CultureInfo(culture);
    Nav.NavigateTo(redirectPath, true);
  //NavigationManager.NavigateTo(query, forceLoad: true);
  }

}