@inherits BaseValueChangedComponent<string>

<div class="mb-2">
  <RadzenFormField class="my-2 w-100" Component="@Name" Text="@Text" Variant="Variant.Filled">
    <RadzenPassword @bind-Value="Value" Name="@Name"></RadzenPassword>
  </RadzenFormField>
  @if (ApplyValidators) {
    <RadzenRequiredValidator Component="@Name" Text="@(Loc["required"].Format("name", Loc["password"]))"></RadzenRequiredValidator>
    <RadzenLengthValidator Component="@Name" Min="3" Text="@Loc["too_short"].Format("name", Loc["password"]).Format("limit", 3)"></RadzenLengthValidator>
    <RadzenLengthValidator Component="@Name" Max="32" Text="@Loc["too_long"].Format("name", Loc["password"]).Format("limit", 32)"></RadzenLengthValidator>
  }

</div>

@code {



  [Parameter]
  public bool ApplyValidators { get; set; } = true;
  [Parameter]
  public string? Text { get; set; }
  [Parameter]
  public string? Name { get; set; }

  protected override void OnInitialized() {
    

  }

  protected override void OnParametersSet() {

    if (string.IsNullOrEmpty(Text)) {
      Text = Loc["password"];
    }
    if (string.IsNullOrEmpty(Name)) {
      Name = "Password";
    }
    base.OnParametersSet();
  }

  //[Parameter]
  //public bool Visible { get; set; } = true;
}