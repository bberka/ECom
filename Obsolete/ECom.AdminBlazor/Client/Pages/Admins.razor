@page "/admins"
@using ECom.Shared.DTOs.AdminDto

@inject HttpClient Http

<PageTitle>Admins</PageTitle>

<RadzenText TextStyle="TextStyle.H3">Admins</RadzenText>

<RadzenDataGrid Data="@admins" AllowFiltering=true TItem="AdminDto"  AllowColumnPicking="true" PickedColumnsChanged="@PickedColumnsChanged">
  <Columns>
    <RadzenDataGridColumn TItem="AdminDto" Property="Id" Title="@Lang.Get("id")" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />
    <RadzenDataGridColumn TItem="AdminDto" Property="RegisterDate" Title="@Lang.Get("register_date")" FormatString="{0:d}" />
    <RadzenDataGridColumn TItem="AdminDto" Property="EmailAddress" Title="@Lang.Get("email_address")"  />
    <RadzenDataGridColumn TItem="AdminDto" Property="TwoFactorType" Title="@Lang.Get("two_factor_type")" />
    <RadzenDataGridColumn TItem="AdminDto" Property="RoleId" Title="@(Lang.Get("role") + Lang.Get("id"))" />
    <RadzenDataGridColumn TItem="AdminDto" Property="RoleName" Title="@(Lang.Get("role") + Lang.Get("name"))" />
    <RadzenDataGridColumn TItem="AdminDto" Property="DeletedDate" Title="@Lang.Get("deleted_date")" FormatString="{0:d}" />
  </Columns>
</RadzenDataGrid>

@code {
  private AdminDto[]? admins;

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();

    admins = await Http.GetFromJsonAsync<AdminDto[]>(URL.BuildUrl(URL.GetAdmins));

  }

  void PickedColumnsChanged(DataGridPickedColumnsChangedEventArgs<AdminDto> args) {
  }
}




